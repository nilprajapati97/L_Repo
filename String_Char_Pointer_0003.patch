SYNOPSIS         top

       #include <string.h>

       char *strchr(const char *s, int c);
       char *strrchr(const char *s, int c);

       #define _GNU_SOURCE         /* See feature_test_macros(7) */
       #include <string.h>

       char *strchrnul(const char *s, int c);
DESCRIPTION         top
       The strchr() function returns a pointer to the first occurrence
       of the character c in the string s.
	   
	   A[] ="Bangalore is Well"
	   char ch= 'l';
	   
	   strchr = lore is Well
	   
	   A[] ="Bangalore is Well"
	   char ch= 'e';
	   
	   strrchr = ell
	   

       The strrchr() function returns a pointer to the last occurrence
       of the character c in the string s.

       The strchrnul() function is like strchr() except that if c is not
       found in s, then it returns a pointer to the null byte at the end
       of s, rather than NULL.

       Here "character" means "byte"; these functions do not work with
       wide or multibyte characters.
RETURN VALUE         top
       The strchr() and strrchr() functions return a pointer to the
       matched character or NULL if the character is not found.  The
       terminating null byte is considered part of the string, so that
       if c is specified as '\0', these functions return a pointer to
       the terminator.

       The strchrnul() function returns a pointer to the matched
       character, or a pointer to the null byte at the end of s (i.e.,
       s+strlen(s)) if the character is not found.

#include <stdio.h>
#include <string.h>

int main()
{
    char a[]="Bangalore is well";
    char ch= 'l';
    char ch1= 'e';
    
    char *p;
    p=strchr(a,ch);
    printf("Strchr:%s\n",p);

    p=strrchr(a,ch1);
    
    printf("Strchr:%s\n",p);
    
    return 0;
}
output=:

Strchr:lore is well
Strchr:ell

###################################################################


#include <stdio.h>
#include <string.h>
char * my_strchr(const char * , char );
//char * my_strrchr(const char *, char );
int main()
{
    char a[]="Bangalore is well";
    char ch= 'o';
    char ch1= '\0';
    
    char *p;
    p=my_strchr(a,ch);
    printf("Strchr:%s\n",p);

    return 0;
}

char * my_strchr(const char p[] , char ch )
{
    int i;
    for(i=0 ;p[i]!=ch;i++)
    ;
    
    return (p + i);
    
    
}

