


	strcmp()	It compares two strings and returns 0 if the strings are the same.
	strncmp()	It compares two strings only to n characters.
	strcat()	It concatenates two strings and returns the concatenated string.
	strncat()	It concatenates n characters of one string to another string.
	
	
	
	
	
		#include <string.h>

       int strcmp(const char *s1, const char *s2);
       int strncmp(const char *s1, const char *s2, size_t n);
	   
	   
	          strcmp() returns an integer indicating the result of the
       comparison, as follows:

       • 0, if the s1 and s2 are equal;

       • a negative value if s1 is less than s2;

       • a positive value if s1 is greater than s2.

       The strncmp() function is similar, except it compares only the
       first (at most) n bytes of s1 and s2.
	   
	   
#include <stdio.h>
#include <string.h>
int  my_strcmp(const char * , const char *  );
int main()
{
    char s1[]="Bangalore is Well";
    char s2[]="Bangalore is Well";
    int p;
    
    //p=strcmp(s1,s2);
    p=my_strcmp(s1,s2);
    printf("Str Compare:%d\n",p);
    return 0;
}

int my_strcmp(char p[] ,char q[])
{
    int i;
    int status=0;
    for(i=0 ;   p[i]!=q[i];  i++);
    
//    if(p[i]==q[i])
//        return 0;
//    else 
        return (p[i] - q[i]);
}

strcat
 s1 = "I am In Bangalore"
 s2 = "India"
 
 s1= I am In BangaloreIndia
